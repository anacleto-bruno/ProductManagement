version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: productmanagement-postgres
    restart: always
    environment:
      POSTGRES_DB: productmanagement
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: productmanagement-redis
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Azure Functions API in Docker
  api:
    build:
      context: ./backend/api
      dockerfile: Dockerfile
    container_name: productmanagement-api
    ports:
      - "7071:80"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=productmanagement;Username=postgres;Password=postgres;Port=5432
      - ConnectionStrings__RedisConnection=redis:6379
      - ASPNETCORE_ENVIRONMENT=Development
      - AzureWebJobsStorage=UseDevelopmentStorage=true
      - AzureWebJobsScriptRoot=/home/site/wwwroot
      - AzureFunctionsJobHost__Logging__Console__IsEnabled=true

  # Frontend React Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: productmanagement-frontend
    ports:
      - "3000:80"
    depends_on:
      - api
    environment:
      - VITE_API_BASE_URL=http://localhost:7071

volumes:
  postgres_data:
